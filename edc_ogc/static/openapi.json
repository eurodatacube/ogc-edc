{
  "openapi" : "3.0.3",
  "info" : {
    "title" : "Testbed-16 DAPA - Gridded Data",
    "contact" : {
      "name" : "<a href=\"https://www.interactive-instruments.de/\">interactive instruments</a> for <a href=\"https://www.ogc.org/projects/initiatives/t-16\">OGC Testbed-16</a>"
    },
    "license" : {
      "name" : "GHCN-Daily, see \"Special Note\"",
      "url" : "https://www.ncdc.noaa.gov/ghcnd-data-access"
    },
    "version" : "0.0.3"
  },
  "servers" : [ {
    "url" : "/"
  } ],
  "paths" : {
    "/" : {
      "get" : {
        "tags" : [ "Capabilities" ],
        "summary" : "landing page",
        "description" : "The landing page provides links to the API definition (link relations `service-desc` and `service-doc`), the Conformance declaration (path `/conformance`, link relation `conformance`), and other resources in the API.",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/LandingPage"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/conformance" : {
      "get" : {
        "tags" : [ "Capabilities" ],
        "summary" : "conformance declaration",
        "description" : "The URIs of all conformance classes supported by the server. This information is provided to support 'generic' clients that want to access multiple OGC API implementations - and not 'just' a specific API. For clients accessing only a single API, this information is in general not relevant and the OpenAPI definition details the required information about the API.",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ConformanceDeclaration"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections" : {
      "get" : {
        "tags" : [ "Data collections" ],
        "summary" : "feature collections in the dataset",
        "description" : "The dataset is organized in feature collections. This resource provides information about and access to the feature collections.\nThe response contains the list of collections. For each collection, a link to the items in the collection (path `/collections/{collectionId}/items`, link relation `items`) as well as key information about the collection.\nThis information includes:\n\n* A local identifier for the collection that is unique for the dataset;\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collections"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation" : {
      "get" : {
        "tags" : [ "Data collections" ],
        "summary" : "feature collection 'observation'",
        "description" : "Information about the feature collection with id 'observation'. The response contains a link to the items in the collection (path `/collections/{collectionId}/items`,link relation `items`) as well as key information about the collection. This information includes:\n\n* A local identifier for the collection that is unique for the dataset;\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collection"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/station" : {
      "get" : {
        "tags" : [ "Data collections" ],
        "summary" : "feature collection 'station'",
        "description" : "Information about the feature collection with id 'station'. The response contains a link to the items in the collection (path `/collections/{collectionId}/items`,link relation `items`) as well as key information about the collection. This information includes:\n\n* A local identifier for the collection that is unique for the dataset;\n* A list of coordinate reference systems (CRS) in which geometries may be returned by the server. The first CRS is the default coordinate reference system (the default is always WGS 84 with axis order longitude/latitude);\n* An optional title and description for the collection;\n* An optional extent that can be used to provide an indication of the spatial and temporal extent of the collection - typically derived from the data;\n* An optional indicator about the type of the items in the collection (the default value, if the indicator is not provided, is 'feature').",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Collection"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/items" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "retrieve features in the feature collection 'observation'",
        "description" : "The response is a document consisting of features in the collection. The features included in the response are determined by the server based on the query parameters of the request. To support access to larger collections without overloading the client, the API supports paged access with links to the next page, if more features are selected that the page size. The `bbox` and `datetime` parameter can be used to select only a subset of the features in the collection (the features that are in the bounding box or time interval). The `bbox` parameter matches all features in the collection that are not associated with a location, too. The `datetime` parameter matches all features in the collection that are not associated with a time stamp or interval, too. The `limit` parameter may be used to control the subset of the selected features that should be returned in the response, the page size. Each page may include information about the number of selected and returned features (`numberMatched` and `numberReturned`) as well as links to support paging (link relation `next`).",
        "parameters" : [ {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or an open or closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n* Open intervals: '2018-02-12T00:00:00Z/..' or '../2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)$",
            "type" : "string"
          }
        }, {
          "name" : "crs",
          "in" : "query",
          "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The optional offset parameter identifies the index of the first feature in the response in the overall result set.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "phenomenonTime", "observedProperty", "unitOfMeasurement", "result", "locationCode", "locationName", "locationLink" ]
            }
          }
        }, {
          "name" : "bbox-crs",
          "in" : "query",
          "description" : "The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "html", "json" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter features in the collection using the query expression in the parameter value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter-lang",
          "in" : "query",
          "description" : "Language of the query expression in the 'filter' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "cql-text",
            "enum" : [ "cql-text", "cql-json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJson_observation"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/items/{featureId}" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "retrieve a feature in the feature collection 'observation'",
        "description" : "Fetch the feature with id `{featureId}`.",
        "parameters" : [ {
          "name" : "featureId",
          "in" : "path",
          "description" : "The local identifier of a feature, unique within the feature collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "crs",
          "in" : "query",
          "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "phenomenonTime", "observedProperty", "unitOfMeasurement", "result", "locationCode", "locationName", "locationLink" ]
            }
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "html", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureGeoJson_observation"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/station/items" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "retrieve features in the feature collection 'station'",
        "description" : "The response is a document consisting of features in the collection. The features included in the response are determined by the server based on the query parameters of the request. To support access to larger collections without overloading the client, the API supports paged access with links to the next page, if more features are selected that the page size. The `bbox` and `datetime` parameter can be used to select only a subset of the features in the collection (the features that are in the bounding box or time interval). The `bbox` parameter matches all features in the collection that are not associated with a location, too. The `datetime` parameter matches all features in the collection that are not associated with a time stamp or interval, too. The `limit` parameter may be used to control the subset of the selected features that should be returned in the response, the page size. Each page may include information about the number of selected and returned features (`numberMatched` and `numberReturned`) as well as links to support paging (link relation `next`).",
        "parameters" : [ {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or an open or closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n* Open intervals: '2018-02-12T00:00:00Z/..' or '../2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)$",
            "type" : "string"
          }
        }, {
          "name" : "crs",
          "in" : "query",
          "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "The optional offset parameter identifies the index of the first feature in the response in the overall result set.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "name", "elevation", "wmoId", "observations" ]
            }
          }
        }, {
          "name" : "bbox-crs",
          "in" : "query",
          "description" : "The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maximum" : 10000,
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "html", "json" ]
          }
        }, {
          "name" : "filter",
          "in" : "query",
          "description" : "Filter features in the collection using the query expression in the parameter value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filter-lang",
          "in" : "query",
          "description" : "Language of the query expression in the 'filter' parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "cql-text",
            "enum" : [ "cql-text", "cql-json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJson_station"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/station/items/{featureId}" : {
      "get" : {
        "tags" : [ "Data" ],
        "summary" : "retrieve a feature in the feature collection 'station'",
        "description" : "Fetch the feature with id `{featureId}`.",
        "parameters" : [ {
          "name" : "featureId",
          "in" : "path",
          "description" : "The local identifier of a feature, unique within the feature collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "crs",
          "in" : "query",
          "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
            "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
          }
        }, {
          "name" : "properties",
          "in" : "query",
          "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "id", "name", "elevation", "wmoId", "observations" ]
            }
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "html", "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureGeoJson_station"
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "404" : {
            "description" : "The requested resource does not exist on the server. For example, a path parameter had an incorrect value."
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "list the available processes",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Processing"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/variables" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "fetch the observable properties included in this observation collection",
        "parameters" : [ {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json", "html" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/Variables"
                },
                "example" : {
                  "variables" : [ {
                    "id" : "PRCP",
                    "title" : "Precipitation",
                    "uom" : "0.1 mm"
                  }, {
                    "id" : "SNOW",
                    "title" : "Snowfall",
                    "uom" : "mm"
                  }, {
                    "id" : "SNWD",
                    "title" : "Snow depth",
                    "uom" : "mm"
                  } ]
                }
              },
              "text/html" : {
                "schema" : {
                  "$ref" : "#/components/schemas/htmlSchema"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/area" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area",
        "description" : "A collection of point features, one for each location in the selected area (`coord` or `bbox`), at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. The feature contains a property for each selected variable (`variables`) for which an observation is available.",
        "parameters" : [ {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/area:aggregate-space" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area and compute values aggregated over space",
        "description" : "A feature with the (multi-)polygon geometry of the selected area (`coord` or `bbox`) at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to all observed values in the area for each time step.",
        "parameters" : [ {
          "name" : "functions",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            },
            "default" : [ "min", "count", "max", "mean" ]
          }
        }, {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/area:aggregate-space-time" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area and compute values aggregated over space and time",
        "description" : "A feature with the (multi-)polygon geometry of the selected area (`coord` or `bbox`). Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to all observed values in the area over all time steps.",
        "parameters" : [ {
          "name" : "functions",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            },
            "default" : [ "min", "count", "max", "mean" ]
          }
        }, {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/area:aggregate-time" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area and compute values aggregated over time",
        "description" : "A collection of point features, one for each location in the selected area (`coord` or `bbox`). Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the observed values at the location for each time step in the selected time interval (`datetime`).",
        "parameters" : [ {
          "name" : "functions",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            },
            "default" : [ "min", "count", "max", "mean" ]
          }
        }, {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/position" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations at a position",
        "description" : "A point observation feature with a point geometry at the selected location (`coord`) at the selected time or for each time step in the selected time interval (`datetime`). The feature contains a property for each selected variable (`variables`) for which a value can be interpolated. The time steps are determined from the information in the original data.",
        "parameters" : [ {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a POINT or POINTZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*POINT\\s*\\(\\s*([+-]?\\d+\\.?\\d*)(?:\\s+([+-]?\\d+\\.?\\d*))+\\s*\\)\\s*$",
            "type" : "string",
            "default" : "POINT(6.9299617 50.000008)"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/position:aggregate-time" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations at a position and compute values aggregated over time",
        "description" : "A point observation feature with a point geometry at the selected location (`coord`). The feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the interpolated values for each time step in the selected time interval (`datetime`).",
        "parameters" : [ {
          "name" : "functions",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            },
            "default" : [ "min", "count", "max", "mean" ]
          }
        }, {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a POINT or POINTZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*POINT\\s*\\(\\s*([+-]?\\d+\\.?\\d*)(?:\\s+([+-]?\\d+\\.?\\d*))+\\s*\\)\\s*$",
            "type" : "string",
            "default" : "POINT(6.9299617 50.000008)"
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/resample-to-grid" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area, resampled to a regular grid",
        "description" : "A collection of point features in a rectangular area (`bbox`), at the selected time or for each time step in the selected time interval (`datetime`). The time steps are determined from the information in the original data. The result of the parent resource is taken and resampled to a grid and each point feature represents a cell of the grid. The grid size is determined by the parameters `width` and `height`. If only `width` is provided, the value of `height` is derived from the area.Each feature contains a property for each selected variable (`variables`) for which a value can be interpolated.",
        "parameters" : [ {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "width",
          "in" : "query",
          "description" : "The number of grid cells in the horizontal direction.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "default" : 10
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        }, {
          "name" : "height",
          "in" : "query",
          "description" : "The number of grid cells in the vertical direction.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/observation/processing/resample-to-grid:aggregate-time" : {
      "get" : {
        "tags" : [ "DAPA" ],
        "summary" : "retrieve information about observations in an area, resampled to a regular grid and aggregated over time",
        "description" : "A collection of point features in a rectangular area (`bbox`). The result of the parent resource is taken and resampled to a grid and each point feature represents a cell of the grid. The grid size is determined by the parameters `width` and `height`. If only `width` is provided, the value of `height` is derived from the area.Each feature includes a property for each combination of variables (`variables`) for which a value can be interpolated and the statistical functions (`functions`). The property value is the function applied to the interpolated values for each time step in the selected time interval (`datetime`).",
        "parameters" : [ {
          "name" : "functions",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            },
            "default" : [ "min", "count", "max", "mean" ]
          }
        }, {
          "name" : "datetime",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string",
            "default" : "2019-08-07/2019-08-11"
          }
        }, {
          "name" : "width",
          "in" : "query",
          "description" : "The number of grid cells in the horizontal direction.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "number",
            "default" : 10
          }
        }, {
          "name" : "f",
          "in" : "query",
          "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "json" ]
          }
        }, {
          "name" : "coord",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "variables",
          "in" : "query",
          "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
            }
          }
        }, {
          "name" : "height",
          "in" : "query",
          "description" : "The number of grid cells in the vertical direction.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "number"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation was executed successfully.",
            "content" : {
              "application/geo+json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/featureCollectionGeoJSON"
                }
              }
            }
          },
          "400" : {
            "description" : "A query parameter has an invalid value.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "406" : {
            "description" : "Content negotiation failed. For example, the `Accept` header submitted in the request did not support any of the media types supported by the server for the requested resource."
          },
          "500" : {
            "description" : "A server error occurred.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/exception"
                }
              },
              "text/html" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/fields/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "Output fields/variables/properties/bands to be included in the request/processing/aggregation.\n\nThe `fields` parameter for the DAPA request can consists values either from the selected collection (e.g., all band\nnames from Sentinel-2) or declared dynamically (e.g., bands algebra NDVI=(B08-B04/B08+B04)) (see the Parameter\nsection below).",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The available field descriptions.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "title" : {
                        "type" : "string"
                      },
                      "wavelength" : {
                        "type" : "number"
                      }
                    }
                  }
                },
                "example" : [ {
                  "id" : "B02",
                  "title" : "Blue",
                  "wavelength" : 492.4
                }, {
                  "id" : "B03",
                  "title" : "Green",
                  "wavelength" : 559.8
                }, {
                  "id" : "B04",
                  "title" : "Red",
                  "wavelength" : 664.6
                }, {
                  "id" : "B08",
                  "title" : "NIR",
                  "wavelength" : 832.8
                } ]
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/cube/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**2d raster time-series** (each with one or multiple bands)\nAvailable only if the collection is a multi-temporal raster dataset.",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "geom",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "cell",
          "in" : "query",
          "description" : "The cell identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output cube format. Defaults to `application/x-netcdf`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "application/x-netcdf" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The resulting cube response.",
            "content" : {
              "application/x-netcdf" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/area/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**Single 2d raster** (e.g., results in TIFF with num(aggregates) x num(fields) bands)\n\n- If the collection is a **multi-temporal raster dataset**, **aggregation over time** is automatically conducted\nbased on the `aggregate` parameter.\n- If the collection is a **single raster dataset**, **no aggregation over time** is conducted.",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "geom",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "cell",
          "in" : "query",
          "description" : "The cell identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output area format. Defaults to `image/tiff`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "image/tiff" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The calculated area response",
            "content" : {
              "image/tiff" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/timeseries/area/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**1d time-series** (each with values from one or multiple fields)\n\n- If the collection is a **multi-temporal raster dataset**, **aggregation over space** is automatically conducted\nbase on the `aggregate` parameter.\n- Can not be used for a single raster dataset",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "geom",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "cell",
          "in" : "query",
          "description" : "The cell identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output timeseries format. Defaults to `text/csv`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "text/csv" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The calculated timeseries data.",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/timeseries/position/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**1d time-series** (each with values from one or multiple fields)\n\n- Extraction of a time series at a point specified in the request\n- No aggregation is conducted because only a single pixel is extracted\n- Can not be used for a single raster dataset",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "point",
          "in" : "query",
          "description" : "The point coordinates.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output timeseries format. Defaults to `text/csv`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "text/csv" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The calculated timeseries data.",
            "content" : {
              "text/csv" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/value/area/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**Single value** (with values from one or multiple fields)\n\n- If the collection is a multi-temporal dataset, **aggregation over space and time** is automatically conducted base on\nthe `aggregate` parameter.\n- If the collection is a single dataset/coverage, **aggregation over space** is automatically conducted base on\nthe `aggregate` parameter.",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "bbox",
          "in" : "query",
          "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "maxItems" : 4,
            "minItems" : 4,
            "type" : "array",
            "items" : {
              "type" : "number",
              "format" : "double"
            }
          }
        }, {
          "name" : "geom",
          "in" : "query",
          "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
            "type" : "string"
          }
        }, {
          "name" : "cell",
          "in" : "query",
          "description" : "The cell identifier.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "aggregate",
          "in" : "query",
          "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output point value format. Defaults to `text/plain`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "text/plain" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The calculated value(s).",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    },
    "/collections/{collection}/dapa/value/position/" : {
      "get" : {
        "tags" : [ "DAPA", "GRID" ],
        "summary" : "**Single value** (with values from one or multiple fields)\n\n- If the collection is a **multi-temporal raster dataset**, **aggregation over time** is automatically conducted\nbased on the `aggregate` parameter.\n- If the collection is a **single raster dataset**, **no aggregation** is conducted.",
        "parameters" : [ {
          "name" : "collection",
          "in" : "path",
          "description" : "The target collection.",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "pattern" : "[\\w\\-]+",
            "type" : "string"
          }
        }, {
          "name" : "point",
          "in" : "query",
          "description" : "The point coordinates.",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }, {
          "name" : "time",
          "in" : "query",
          "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
          "required" : false,
          "style" : "form",
          "explode" : false,
          "schema" : {
            "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "The required provided or dynamically calculated fields",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "The output point value format. Defaults to `text/plain`",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "text/plain" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The calculated value(s).",
            "content" : {
              "text/plain" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "LandingPage" : {
        "type" : "object",
        "properties" : {
          "extent" : {
            "type" : "object",
            "properties" : {
              "spatial" : {
                "required" : [ "bbox", "crs" ],
                "type" : "object",
                "properties" : {
                  "bbox" : {
                    "type" : "array",
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "type" : "number"
                      }
                    }
                  },
                  "crs" : {
                    "type" : "string"
                  }
                }
              },
              "temporal" : {
                "required" : [ "interval", "trs" ],
                "type" : "object",
                "properties" : {
                  "trs" : {
                    "type" : "string"
                  },
                  "interval" : {
                    "type" : "array",
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "htmlSchema" : {
        "type" : "string",
        "example" : "<html>...</html>"
      },
      "ConformanceDeclaration" : {
        "type" : "object",
        "properties" : {
          "conformsTo" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "Collections" : {
        "type" : "object",
        "properties" : {
          "crs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "collections" : {
            "type" : "array",
            "items" : {
              "required" : [ "id" ],
              "type" : "object",
              "properties" : {
                "styles" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "id" ],
                    "type" : "object",
                    "properties" : {
                      "id" : {
                        "type" : "string"
                      },
                      "links" : {
                        "type" : "array",
                        "items" : {
                          "required" : [ "href" ],
                          "type" : "object",
                          "properties" : {
                            "title" : {
                              "type" : "string"
                            },
                            "rel" : {
                              "type" : "string"
                            },
                            "href" : {
                              "type" : "string"
                            },
                            "hreflang" : {
                              "type" : "string"
                            },
                            "templated" : {
                              "type" : "boolean"
                            },
                            "length" : {
                              "type" : "integer",
                              "format" : "int32"
                            },
                            "type" : {
                              "type" : "string"
                            }
                          }
                        }
                      },
                      "description" : {
                        "type" : "string"
                      },
                      "title" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "extent" : {
                  "type" : "object",
                  "properties" : {
                    "spatial" : {
                      "required" : [ "bbox", "crs" ],
                      "type" : "object",
                      "properties" : {
                        "bbox" : {
                          "type" : "array",
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "number"
                            }
                          }
                        },
                        "crs" : {
                          "type" : "string"
                        }
                      }
                    },
                    "temporal" : {
                      "required" : [ "interval", "trs" ],
                      "type" : "object",
                      "properties" : {
                        "trs" : {
                          "type" : "string"
                        },
                        "interval" : {
                          "type" : "array",
                          "items" : {
                            "type" : "array",
                            "items" : {
                              "type" : "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "storageCrs" : {
                  "type" : "string"
                },
                "crs" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                },
                "itemType" : {
                  "type" : "string"
                },
                "defaultStyle" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                },
                "links" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "href" ],
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string"
                      },
                      "rel" : {
                        "type" : "string"
                      },
                      "href" : {
                        "type" : "string"
                      },
                      "hreflang" : {
                        "type" : "string"
                      },
                      "templated" : {
                        "type" : "boolean"
                      },
                      "length" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "type" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "description" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "Collection" : {
        "required" : [ "id" ],
        "type" : "object",
        "properties" : {
          "styles" : {
            "type" : "array",
            "items" : {
              "required" : [ "id" ],
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "links" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "href" ],
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string"
                      },
                      "rel" : {
                        "type" : "string"
                      },
                      "href" : {
                        "type" : "string"
                      },
                      "hreflang" : {
                        "type" : "string"
                      },
                      "templated" : {
                        "type" : "boolean"
                      },
                      "length" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "type" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "description" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          },
          "extent" : {
            "type" : "object",
            "properties" : {
              "spatial" : {
                "required" : [ "bbox", "crs" ],
                "type" : "object",
                "properties" : {
                  "bbox" : {
                    "type" : "array",
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "type" : "number"
                      }
                    }
                  },
                  "crs" : {
                    "type" : "string"
                  }
                }
              },
              "temporal" : {
                "required" : [ "interval", "trs" ],
                "type" : "object",
                "properties" : {
                  "trs" : {
                    "type" : "string"
                  },
                  "interval" : {
                    "type" : "array",
                    "items" : {
                      "type" : "array",
                      "items" : {
                        "type" : "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "storageCrs" : {
            "type" : "string"
          },
          "crs" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "itemType" : {
            "type" : "string"
          },
          "defaultStyle" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "featureCollectionGeoJson_observation" : {
        "required" : [ "features", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "FeatureCollection" ]
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/featureGeoJson_observation"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links"
            }
          },
          "timestamp" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timestamp"
          },
          "numberMatched" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched"
          },
          "numberReturned" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned"
          }
        }
      },
      "featureGeoJson_observation" : {
        "title" : "Observations",
        "required" : [ "geometry", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "geometry" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON"
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "integer"
              },
              "phenomenonTime" : {
                "type" : "string",
                "format" : "date-time"
              },
              "observedProperty" : {
                "type" : "string"
              },
              "unitOfMeasurement" : {
                "type" : "string"
              },
              "result" : {
                "type" : "integer"
              },
              "locationCode" : {
                "type" : "string"
              },
              "locationName" : {
                "type" : "string"
              },
              "locationLink" : {
                "type" : "string"
              }
            }
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links"
            }
          }
        },
        "description" : "Daily observations from land-based stations worldwide. The archive includes the following meteorological elements: daily maximum temperature, daily minimum temperature, temperature at the time of observation, precipitation (i.e., rain, melted snow), snowfall, snow depth, other elements where available."
      },
      "featureCollectionGeoJson_station" : {
        "required" : [ "features", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "FeatureCollection" ]
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/featureGeoJson_station"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links"
            }
          },
          "timestamp" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timestamp"
          },
          "numberMatched" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched"
          },
          "numberReturned" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned"
          }
        }
      },
      "featureGeoJson_station" : {
        "title" : "Stations",
        "required" : [ "geometry", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "geometry" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON"
          },
          "properties" : {
            "type" : "object",
            "properties" : {
              "id" : {
                "type" : "string"
              },
              "name" : {
                "type" : "string"
              },
              "elevation" : {
                "type" : "number"
              },
              "wmoId" : {
                "type" : "string"
              },
              "observations" : {
                "type" : "string"
              }
            }
          },
          "id" : {
            "type" : "string"
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/links"
            }
          }
        },
        "description" : "The land-based stations contributing to the GHCN-Daily observation dataset."
      },
      "Processing" : {
        "type" : "object",
        "properties" : {
          "processes" : {
            "type" : "array",
            "items" : {
              "required" : [ "inputCollectionId", "processDescriptionUri" ],
              "type" : "object",
              "properties" : {
                "inputCollectionId" : {
                  "type" : "string"
                },
                "processDescriptionUri" : {
                  "type" : "string"
                },
                "links" : {
                  "type" : "array",
                  "items" : {
                    "required" : [ "href" ],
                    "type" : "object",
                    "properties" : {
                      "title" : {
                        "type" : "string"
                      },
                      "rel" : {
                        "type" : "string"
                      },
                      "href" : {
                        "type" : "string"
                      },
                      "hreflang" : {
                        "type" : "string"
                      },
                      "templated" : {
                        "type" : "boolean"
                      },
                      "length" : {
                        "type" : "integer",
                        "format" : "int32"
                      },
                      "type" : {
                        "type" : "string"
                      }
                    }
                  }
                },
                "description" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                }
              }
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "Variables" : {
        "type" : "object",
        "properties" : {
          "variables" : {
            "type" : "array",
            "items" : {
              "required" : [ "id" ],
              "type" : "object",
              "properties" : {
                "description" : {
                  "type" : "string"
                },
                "title" : {
                  "type" : "string"
                },
                "uom" : {
                  "type" : "string"
                },
                "id" : {
                  "type" : "string"
                }
              }
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "required" : [ "href" ],
              "type" : "object",
              "properties" : {
                "title" : {
                  "type" : "string"
                },
                "rel" : {
                  "type" : "string"
                },
                "href" : {
                  "type" : "string"
                },
                "hreflang" : {
                  "type" : "string"
                },
                "templated" : {
                  "type" : "boolean"
                },
                "length" : {
                  "type" : "integer",
                  "format" : "int32"
                },
                "type" : {
                  "type" : "string"
                }
              }
            }
          },
          "description" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          }
        }
      },
      "exception" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        },
        "description" : "Information about the exception: an error code plus an optional description."
      },
      "featureCollectionGeoJSON" : {
        "required" : [ "features", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "FeatureCollection" ]
          },
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/featureGeoJSON"
            }
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/link"
            }
          },
          "timeStamp" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/timeStamp"
          },
          "numberMatched" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberMatched"
          },
          "numberReturned" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/numberReturned"
          }
        }
      },
      "featureGeoJSON" : {
        "required" : [ "geometry", "properties", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Feature" ]
          },
          "geometry" : {
            "$ref" : "https://raw.githubusercontent.com/opengeospatial/ogcapi-features/master/core/openapi/ogcapi-features-1.yaml#/components/schemas/geometryGeoJSON"
          },
          "properties" : {
            "type" : "object",
            "nullable" : true
          },
          "id" : {
            "oneOf" : [ {
              "type" : "string"
            }, {
              "type" : "integer"
            } ]
          },
          "links" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/link"
            }
          }
        }
      },
      "geometryGeoJSON" : {
        "oneOf" : [ {
          "$ref" : "#/components/schemas/pointGeoJSON"
        }, {
          "$ref" : "#/components/schemas/multipointGeoJSON"
        }, {
          "$ref" : "#/components/schemas/linestringGeoJSON"
        }, {
          "$ref" : "#/components/schemas/multilinestringGeoJSON"
        }, {
          "$ref" : "#/components/schemas/polygonGeoJSON"
        }, {
          "$ref" : "#/components/schemas/multipolygonGeoJSON"
        }, {
          "$ref" : "#/components/schemas/geometrycollectionGeoJSON"
        } ]
      },
      "pointGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Point" ]
          },
          "coordinates" : {
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "type" : "number"
            }
          }
        }
      },
      "multipointGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "MultiPoint" ]
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "minItems" : 2,
              "type" : "array",
              "items" : {
                "type" : "number"
              }
            }
          }
        }
      },
      "linestringGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "LineString" ]
          },
          "coordinates" : {
            "minItems" : 2,
            "type" : "array",
            "items" : {
              "minItems" : 2,
              "type" : "array",
              "items" : {
                "type" : "number"
              }
            }
          }
        }
      },
      "multilinestringGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "MultiLineString" ]
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "minItems" : 2,
              "type" : "array",
              "items" : {
                "minItems" : 2,
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      },
      "polygonGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "Polygon" ]
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "minItems" : 4,
              "type" : "array",
              "items" : {
                "minItems" : 2,
                "type" : "array",
                "items" : {
                  "type" : "number"
                }
              }
            }
          }
        }
      },
      "multipolygonGeoJSON" : {
        "required" : [ "coordinates", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "MultiPolygon" ]
          },
          "coordinates" : {
            "type" : "array",
            "items" : {
              "type" : "array",
              "items" : {
                "minItems" : 4,
                "type" : "array",
                "items" : {
                  "minItems" : 2,
                  "type" : "array",
                  "items" : {
                    "type" : "number"
                  }
                }
              }
            }
          }
        }
      },
      "geometrycollectionGeoJSON" : {
        "required" : [ "geometries", "type" ],
        "type" : "object",
        "properties" : {
          "type" : {
            "type" : "string",
            "enum" : [ "GeometryCollection" ]
          },
          "geometries" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/geometryGeoJSON"
            }
          }
        }
      },
      "link" : {
        "required" : [ "href" ],
        "type" : "object",
        "properties" : {
          "href" : {
            "type" : "string",
            "example" : "http://data.example.com/buildings/123"
          },
          "rel" : {
            "type" : "string",
            "example" : "alternate"
          },
          "type" : {
            "type" : "string",
            "example" : "application/geo+json"
          },
          "hreflang" : {
            "type" : "string",
            "example" : "en"
          },
          "title" : {
            "type" : "string",
            "example" : "Trierer Strasse 70, 53115 Bonn"
          },
          "length" : {
            "type" : "integer"
          }
        }
      },
      "timeStamp" : {
        "type" : "string",
        "description" : "This property indicates the time and date when the response was generated.",
        "format" : "date-time",
        "example" : "2017-08-17T08:05:32Z"
      },
      "numberMatched" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The number of features of the feature type that match the selection\nparameters like `bbox`.",
        "example" : 127
      },
      "numberReturned" : {
        "minimum" : 0,
        "type" : "integer",
        "description" : "The number of features in the feature collection.\n\nA server may omit this information in a response, if the information\nabout the number of features is not known or difficult to compute.\n\nIf the value is provided, the value shall be identical to the number\nof items in the \"features\" array.",
        "example" : 10
      }
    },
    "parameters" : {
      "fCommon" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json", "html" ]
        }
      },
      "fCollections" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json", "html" ]
        }
      },
      "datetime" : {
        "name" : "datetime",
        "in" : "query",
        "description" : "Either a local date, a date-time with offsets or an open or closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n* Open intervals: '2018-02-12T00:00:00Z/..' or '../2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])|(?:\\.\\.)?)$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)/(?:(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))|(?:\\.\\.)?)$",
          "type" : "string"
        }
      },
      "crsFeatures_observation" : {
        "name" : "crs",
        "in" : "query",
        "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
        }
      },
      "bbox" : {
        "name" : "bbox",
        "in" : "query",
        "description" : "Only features that have a geometry that intersects the bounding box are selected. The bounding box is provided as four or six numbers, depending on whether the coordinate reference system includes a vertical axis (height or depth):\n\n* Lower left corner, coordinate axis 1 \n* Lower left corner, coordinate axis 2 \n* Minimum value, coordinate axis 3 (optional) \n* Upper right corner, coordinate axis 1 \n* Upper right corner, coordinate axis 2 \n* Maximum value, coordinate axis 3 (optional) \n\nThe coordinate reference system of the values is WGS 84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless a different coordinate reference system is specified in the parameter `bbox-crs`. For WGS 84 longitude/latitude the values are in most cases the sequence of minimum longitude, minimum latitude, maximum longitude and maximum latitude. However, in cases where the box spans the antimeridian the first value (west-most box edge) is larger than the third value (east-most box edge). If the vertical axis is included, the third and the sixth number are the bottom and the top of the 3-dimensional bounding box. \nIf a feature has multiple spatial geometry properties, it is the decision of the server whether only a single spatial geometry property is used to determine the extent or all relevant geometries.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "maxItems" : 4,
          "minItems" : 4,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        }
      },
      "offsetFeatures" : {
        "name" : "offset",
        "in" : "query",
        "description" : "The optional offset parameter identifies the index of the first feature in the response in the overall result set.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "minimum" : 0,
          "type" : "integer",
          "format" : "int32",
          "default" : 0
        }
      },
      "propertiesFeatures_observation" : {
        "name" : "properties",
        "in" : "query",
        "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "id", "phenomenonTime", "observedProperty", "unitOfMeasurement", "result", "locationCode", "locationName", "locationLink" ]
          }
        }
      },
      "bbox-crsFeatures_observation" : {
        "name" : "bbox-crs",
        "in" : "query",
        "description" : "The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
        }
      },
      "limitFeatures" : {
        "name" : "limit",
        "in" : "query",
        "description" : "The optional limit parameter limits the number of items that are presented in the response document. Only items are counted that are on the first level of the collection in the response document. Nested objects contained within the explicitly requested items shall not be counted.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "maximum" : 10000,
          "minimum" : 1,
          "type" : "integer",
          "format" : "int32",
          "default" : 10
        }
      },
      "fFeatures" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "html", "json" ]
        }
      },
      "featureId" : {
        "name" : "featureId",
        "in" : "path",
        "description" : "The local identifier of a feature, unique within the feature collection.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "[\\w\\-]+",
          "type" : "string"
        }
      },
      "crsFeatures_station" : {
        "name" : "crs",
        "in" : "query",
        "description" : "The coordinate reference system of the response geometries. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
        }
      },
      "propertiesFeatures_station" : {
        "name" : "properties",
        "in" : "query",
        "description" : "The properties that should be included for each feature. The parameter value is a comma-separated list of property names.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "id", "name", "elevation", "wmoId", "observations" ]
          }
        }
      },
      "bbox-crsFeatures_station" : {
        "name" : "bbox-crs",
        "in" : "query",
        "description" : "The coordinate reference system of the `bbox` parameter. Default is WGS84 longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84).",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "http://www.opengis.net/def/crs/OGC/1.3/CRS84",
          "enum" : [ "http://www.opengis.net/def/crs/OGC/1.3/CRS84", "http://www.opengis.net/def/crs/EPSG/0/4326", "http://www.opengis.net/def/crs/EPSG/0/3857", "http://www.opengis.net/def/crs/EPSG/0/4087" ]
        }
      },
      "fProcessing" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json" ]
        }
      },
      "fVariables" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json", "html" ]
        }
      },
      "datetimeClosed" : {
        "name" : "datetime",
        "in" : "query",
        "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
          "type" : "string",
          "default" : "2019-08-07/2019-08-11"
        }
      },
      "fProcesses" : {
        "name" : "f",
        "in" : "query",
        "description" : "The available output formats for the response. If no value is provided, the standard HTTP rules apply, i.e., the accept header will be used to determine the format.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "enum" : [ "json" ]
        }
      },
      "coordArea" : {
        "name" : "coord",
        "in" : "query",
        "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
          "type" : "string"
        }
      },
      "variables" : {
        "name" : "variables",
        "in" : "query",
        "description" : "A comma-separated list of values with names of observable properties that should be returned in the response.\n\nMore information about the available properties can be retrieved from the `../variables` path.\n\nThe default is to return all observed properties.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "PRCP", "SNOW", "SNWD", "TMAX", "TMIN", "TAVG" ]
          }
        }
      },
      "functions" : {
        "name" : "functions",
        "in" : "query",
        "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
          },
          "default" : [ "min", "count", "max", "mean" ]
        }
      },
      "coordPosition" : {
        "name" : "coord",
        "in" : "query",
        "description" : "A Well Known Text representation of a POINT or POINTZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^\\s*POINT\\s*\\(\\s*([+-]?\\d+\\.?\\d*)(?:\\s+([+-]?\\d+\\.?\\d*))+\\s*\\)\\s*$",
          "type" : "string",
          "default" : "POINT(6.9299617 50.000008)"
        }
      },
      "width" : {
        "name" : "width",
        "in" : "query",
        "description" : "The number of grid cells in the horizontal direction.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "number",
          "default" : 10
        }
      },
      "height" : {
        "name" : "height",
        "in" : "query",
        "description" : "The number of grid cells in the vertical direction.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "number"
        }
      },
      "filter" : {
        "name" : "filter",
        "in" : "query",
        "description" : "Filter features in the collection using the query expression in the parameter value.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string"
        }
      },
      "filter-lang" : {
        "name" : "filter-lang",
        "in" : "query",
        "description" : "Language of the query expression in the 'filter' parameter.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "string",
          "default" : "cql-text",
          "enum" : [ "cql-text", "cql-json" ]
        }
      },
      "collection-id" : {
        "name" : "collection",
        "in" : "path",
        "description" : "The target collection.",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "pattern" : "[\\w\\-]+",
          "type" : "string"
        }
      },
      "fields" : {
        "name" : "fields",
        "in" : "query",
        "description" : "The required provided or dynamically calculated fields",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      },
      "geom" : {
        "name" : "geom",
        "in" : "query",
        "description" : "A Well Known Text representation of a (MULTI)POLYGON or (MULTI)POLYGONZ geometry as defined in Simple Feature Access - Part 1: Common Architecture.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^\\s*MULTIPOLYGON\\s*\\(\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*(?:\\s*\\,\\s*(\\(\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*(?:\\s*\\,\\s*\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\)\\s*)*\\))\\s*)*\\)\\s*$|^\\s*POLYGON\\s*\\(\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*(?:\\s*\\,\\s*(\\(\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+(?:\\s*\\,\\s*[+-]?\\d+\\.?\\d*(?:\\s+[+-]?\\d+\\.?\\d*)+\\s*)+\\))\\s*)*\\)\\s*$",
          "type" : "string"
        }
      },
      "time" : {
        "name" : "time",
        "in" : "query",
        "description" : "Either a local date, a date-time with offsets or a closed interval. Date and time expressions adhere to RFC 3339. \nExamples:\n\n* A date-time: '2018-02-12T23:20:50Z'\n* A closed interval: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'\n\nSelects features that have a temporal property that intersects the value of the parameter.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "pattern" : "^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$|^(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))/(?:\\d{4})-(?:0[1-9]|1[0-2])-(?:0[1-9]|[12][0-9]|3[01])T(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]):(?:[0-5][0-9]|60)(?:\\.[0-9]+)?(Z|(\\+|-)(?:[01][0-9]|2[0-3]):(?:[0-5][0-9]))$",
          "type" : "string"
        }
      },
      "aggregate" : {
        "name" : "aggregate",
        "in" : "query",
        "description" : "The statistical function(s) to apply when aggregating multiple values to a single value.",
        "required" : false,
        "style" : "form",
        "explode" : false,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "min", "count", "max", "std-dev", "sum", "mean" ]
          }
        }
      },
      "cube-format" : {
        "name" : "format",
        "in" : "query",
        "description" : "The output cube format. Defaults to `application/x-netcdf`",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "application/x-netcdf" ]
        }
      },
      "area-format" : {
        "name" : "format",
        "in" : "query",
        "description" : "The output area format. Defaults to `image/tiff`",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "image/tiff" ]
        }
      },
      "timeseries-format" : {
        "name" : "format",
        "in" : "query",
        "description" : "The output timeseries format. Defaults to `text/csv`",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "text/csv" ]
        }
      },
      "value-format" : {
        "name" : "format",
        "in" : "query",
        "description" : "The output point value format. Defaults to `text/plain`",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string",
          "enum" : [ "text/plain" ]
        }
      },
      "point" : {
        "name" : "point",
        "in" : "query",
        "description" : "The point coordinates.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "array",
          "items" : {
            "type" : "number"
          }
        }
      },
      "cell" : {
        "name" : "cell",
        "in" : "query",
        "description" : "The cell identifier.",
        "required" : false,
        "style" : "form",
        "explode" : true,
        "schema" : {
          "type" : "string"
        }
      }
    },
    "requestBodies" : {
      "cubeParams" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "id" : {
                  "type" : "string"
                },
                "bbox" : {
                  "type" : "array",
                  "items" : {
                    "type" : "array",
                    "items" : {
                      "type" : "number"
                    }
                  }
                },
                "crs" : {
                  "type" : "string"
                },
                "bands" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}